buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
		maven { url "https://repo.spongepowered.org/repository/maven-public/" }
        jcenter()
        mavenCentral()
		gradlePluginPortal()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
		classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

repositories {
	maven {
        url "https://www.cursemaven.com"
    }
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
    }
}
        
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'java'

version = "1.12.2-1.1.4"
group = "net.smileycorp.raids"
archivesBaseName = "Raids-Backport"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: 'snapshot', version: '20171003-1.12'
    
    accessTransformer = file('src/main/resources/META-INF/raids_at.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }

        server {

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }
    }
}

mixin {
    add sourceSets.main, "mixins.raids.refmap.json"
}

repositories {
    maven { url = 'https://repo.spongepowered.org/maven' }
}

configurations {
    embed
    compile.extendsFrom(embed)
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'
	implementation "org.spongepowered:mixin:0.8"
    implementation "io.github.llamalad7:mixinextras-common:0.4.1"
    //implementation "curse.maven:atlas-463826:5877784"
	implementation "curse.maven:crossbows-973881:5108261"
	implementation "curse.maven:futuremc-310059:5013081"
	implementation "curse.maven:tconstruct-74072:2902483"
	implementation "curse.maven:mantle-74924:2713386"
	implementation "curse.maven:spartan-weaponry-278141:4467344"
    implementation "curse.maven:tektopia-333029:2763046"
    implementation "curse.maven:gamestages-268655:2951840"
    implementation "curse.maven:deeperdepths-1101129:5753202"
    implementation "maven.modrinth:crossbow:1.1.0"
    implementation files("libs/Atlas-Lib-1.12.2-1.1.7.jar")
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "raids",
            "Specification-Vendor": "smileycorp",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"smileycorp",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "FMLCorePlugin": "net.smileycorp.raids.common.RaidsPlugin",
			"ForceLoadAsMod": true,
			"FMLAT": "raids_at.cfg",
			"FMLCorePluginContainsFMLMod": true,
			"TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
			"MixinConfigs": "mixins.raids.json"
        ])
        
    }
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", "1.12.2"

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':"1.12.2"
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
